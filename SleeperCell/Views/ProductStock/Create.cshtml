@model SleeperCell.Models.ProductStockViewModel

@{
    ViewBag.Title = "Create";
}


<div class="box box-primary">
    <div class="box-header with-border">
        <h3 class="box-title">Create Product Stock</h3>
    </div>
    <!-- /.box-header -->
    <!-- form start -->
    @using (Html.BeginForm())
    {
        @Html.HiddenFor(model => model.ProductId)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.AntiForgeryToken()
        <h4>Category: @Model.Category </h4> <h4> Product: @Model.ProductName</h4>
        <hr />
        <div class="box-body">
            <div class="row">
                <div class="col-md-6 ">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UnitCost, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.UnitCost, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UnitCost, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.DropDownListFor(model => model.VenderId, (IEnumerable<SelectListItem>)ViewBag.VendorSelectList, "Select Vendor", new { @class = "form-control " })
                        @Html.ValidationMessageFor(model => model.VenderId, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CreationDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => DateTime.Today.ToString("yyyy/MM/dd"), new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CreationDate, "", new { @class = "text-danger" })
                    </div>


                </div>
            </div>
        </div>
        <!-- /.box-body -->

        <div class="box-footer">
            <button type="submit" class="btn btn-primary">Submit</button>
        </div>
    }
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>